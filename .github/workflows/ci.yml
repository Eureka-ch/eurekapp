name: CI - Test Runner

# Run the workflow when commits are pushed on main or when a PR is modified
on:
  push:
    branches:
      - main

  pull_request:
    types:
      - opened
      - synchronize
      - reopened

jobs:
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: KTFmt Check
        run: ./gradlew ktfmtCheck

  build-and-unit-tests:
    name: Build & Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3

      - name: Decode secrets
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
          FIRESTORE_RULES: ${{ secrets.FIRESTORE_RULES }}
          STORAGE_RULES: ${{ secrets.STORAGE_RULES }}
          GOOGLE_CLOUD_CREDENTIALS: ${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}

        run: |
          if [ -n "$GOOGLE_SERVICES" ]; then
            echo "$GOOGLE_SERVICES" | base64 --decode > ./app/google-services.json
          else
            echo "::warning::GOOGLE_SERVICES secret is not set. google-services.json will not be created. Should be present after B2"
          fi
          if [ -n "$FIRESTORE_RULES" ]; then
            mkdir -p ./firebase/firestore
            echo "$FIRESTORE_RULES" | base64 --decode > ./firebase/firestore/firestore.rules
          fi
          if [ -n "$STORAGE_RULES" ]; then
            mkdir -p ./firebase/storage
            echo "$STORAGE_RULES" | base64 --decode > ./firebase/storage/storage.rules
          fi
          if [ -n "$GOOGLE_CLOUD_CREDENTIALS" ]; then
            mkdir -p ./functions
            echo "$GOOGLE_CLOUD_CREDENTIALS" | base64 --decode > ./functions/eureka-stt-service-account.json
          else
            echo "::warning::GOOGLE_CLOUD_CREDENTIALS secret is not set. Speech-to-Text transcription tests will fail."
          fi

          if [ -n "$LOCAL_PROPERTIES" ]; then
            echo "$LOCAL_PROPERTIES" | base64 --decode > ./local.properties
          else
            echo "::warning::LOCAL_PROPERTIES secret is not set. local.properties will not be created. Should be present after B3"
          fi

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Assemble
        run: ./gradlew assemble lint --parallel --build-cache

      - name: Run unit tests
        run: ./gradlew check --parallel --build-cache

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: |
            app/build/test-results/
            app/build/reports/

  instrumented-tests:
    name: Instrumented Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3

      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-36-pixel7pro

      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 36
          target: google_apis
          arch: x86_64
          profile: pixel_7_pro
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back emulated -camera-front emulated -memory 4096 -cores 4
          disable-animations: true
          script: echo "Generated AVD snapshot for caching."

      - name: Decode secrets
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
          FIRESTORE_RULES: ${{ secrets.FIRESTORE_RULES }}
          STORAGE_RULES: ${{ secrets.STORAGE_RULES }}
          GOOGLE_CLOUD_CREDENTIALS: ${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}

        run: |
          if [ -n "$GOOGLE_SERVICES" ]; then
            echo "$GOOGLE_SERVICES" | base64 --decode > ./app/google-services.json
          else
            echo "::warning::GOOGLE_SERVICES secret is not set. google-services.json will not be created. Should be present after B2"
          fi
          if [ -n "$FIRESTORE_RULES" ]; then
            mkdir -p ./firebase/firestore
            echo "$FIRESTORE_RULES" | base64 --decode > ./firebase/firestore/firestore.rules
          fi
          if [ -n "$STORAGE_RULES" ]; then
            mkdir -p ./firebase/storage
            echo "$STORAGE_RULES" | base64 --decode > ./firebase/storage/storage.rules
          fi
          if [ -n "$GOOGLE_CLOUD_CREDENTIALS" ]; then
            mkdir -p ./functions
            echo "$GOOGLE_CLOUD_CREDENTIALS" | base64 --decode > ./functions/eureka-stt-service-account.json
          else
            echo "::warning::GOOGLE_CLOUD_CREDENTIALS secret is not set. Speech-to-Text transcription tests will fail."
          fi

          if [ -n "$LOCAL_PROPERTIES" ]; then
            echo "$LOCAL_PROPERTIES" | base64 --decode > ./local.properties
          else
            echo "::warning::LOCAL_PROPERTIES secret is not set. local.properties will not be created. Should be present after B3"
          fi

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Cache Firebase CLI
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-firebase-cli-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-firebase-cli-

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Cache Cloud Functions dependencies
        uses: actions/cache@v4
        with:
          path: functions/node_modules
          key: ${{ runner.os }}-functions-${{ hashFiles('functions/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-functions-

      - name: Build Cloud Functions
        run: |
          cd functions
          npm install
          npm run build
          cd ..

      - name: Start Firebase emulators
        run: |
          if [ -e "firebase.json" ] && jq -e '.emulators' firebase.json >/dev/null; then
            echo "Starting Firebase emulators for instrumentation tests..."
            firebase emulators:start --only storage,firestore,auth,functions --project eureka-app-ch &
            sleep 20
            echo "Firebase emulators started"
          else
            echo "Firebase emulators not configured, skipping emulator startup..."
          fi

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 36
          target: google_apis
          arch: x86_64
          profile: pixel_7_pro
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back emulated -camera-front emulated -memory 4096 -cores 4
          disable-animations: true
          script: ./gradlew connectedCheck --parallel --build-cache --stacktrace --info

      - name: Upload instrumented test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: instrumented-test-results
          path: |
            app/build/outputs/androidTest-results/
            app/build/reports/androidTests/

  reports:
    name: Coverage & SonarCloud
    runs-on: ubuntu-latest
    needs: [build-and-unit-tests, instrumented-tests]
    if: always()

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Gradle cache
        uses: gradle/actions/setup-gradle@v3

      - name: Decode secrets
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
          FIRESTORE_RULES: ${{ secrets.FIRESTORE_RULES }}
          STORAGE_RULES: ${{ secrets.STORAGE_RULES }}
          GOOGLE_CLOUD_CREDENTIALS: ${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}

        run: |
          if [ -n "$GOOGLE_SERVICES" ]; then
            echo "$GOOGLE_SERVICES" | base64 --decode > ./app/google-services.json
          else
            echo "::warning::GOOGLE_SERVICES secret is not set. google-services.json will not be created. Should be present after B2"
          fi
          if [ -n "$FIRESTORE_RULES" ]; then
            mkdir -p ./firebase/firestore
            echo "$FIRESTORE_RULES" | base64 --decode > ./firebase/firestore/firestore.rules
          fi
          if [ -n "$STORAGE_RULES" ]; then
            mkdir -p ./firebase/storage
            echo "$STORAGE_RULES" | base64 --decode > ./firebase/storage/storage.rules
          fi
          if [ -n "$GOOGLE_CLOUD_CREDENTIALS" ]; then
            mkdir -p ./functions
            echo "$GOOGLE_CLOUD_CREDENTIALS" | base64 --decode > ./functions/eureka-stt-service-account.json
          else
            echo "::warning::GOOGLE_CLOUD_CREDENTIALS secret is not set. Speech-to-Text transcription tests will fail."
          fi

          if [ -n "$LOCAL_PROPERTIES" ]; then
            echo "$LOCAL_PROPERTIES" | base64 --decode > ./local.properties
          else
            echo "::warning::LOCAL_PROPERTIES secret is not set. local.properties will not be created. Should be present after B3"
          fi

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Download unit test results
        uses: actions/download-artifact@v4
        with:
          name: unit-test-results
          path: app/build/test-results/

      - name: Download instrumented test results
        uses: actions/download-artifact@v4
        with:
          name: instrumented-test-results
          path: app/build/outputs/androidTest-results/

      - name: Generate Coverage Report
        run: ./gradlew jacocoTestReport

      - name: Upload report to SonarCloud
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonar --parallel --build-cache
