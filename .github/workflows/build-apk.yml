name: Android CI - Build APK

on:
  workflow_dispatch:        # allows manual trigger (for "push of a button")
  push:
    branches:
      - release/**          # e.g., release/M1

jobs:
  build:
    name: Build Debug APK
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # Step 3: Cache Gradle dependencies (optional but speeds up builds)
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Decode secrets
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
          LOCAL_PROPERTIES: ${{ secrets.LOCAL_PROPERTIES }}
        run: |
          if [ -n "$GOOGLE_SERVICES" ]; then
            echo "$GOOGLE_SERVICES" | base64 --decode > ./app/google-services.json
          else
            echo "::warning::GOOGLE_SERVICES secret is not set. google-services.json will not be created."
          fi
          if [ -n "$LOCAL_PROPERTIES" ]; then
            echo "$LOCAL_PROPERTIES" | base64 --decode > ./local.properties
          else
            echo "::warning::LOCAL_PROPERTIES secret is not set. local.properties will not be created."
          fi

      # Step 4: Make Gradle executable
      - name: Grant execute permission for Gradle
        run: chmod +x gradlew

      # Step 5: Build the APK
      - name: Build Debug APK
        run: ./gradlew build

      # Step 6: Upload the APK as an artifact
      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: APK
          path: app/build/outputs/apk/release/eurekapp.apk
